# -*- coding: utf-8 -*-
"""Scrooge Poem.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GUbzc-dx5zU2FqzydcDaN0ibNte0wrd4
"""

!pip install pronouncing
import pronouncing
import random
from textblob import TextBlob
import nltk
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')

from google.colab import files

uploaded = files.upload()
for fn in uploaded.keys():
    text = uploaded[fn].decode('utf-8',errors="surrogateescape")
  
import nltk
nltk.download('punkt')
  
import nltk
nltk.download('brown')
  
import random
from textblob import TextBlob
  
  
blob = TextBlob(text)
  
for i in range(5):
  print( blob.noun_phrases[random.randint(0,1000)])
  print( blob.words[random.randint(0,12787)])
    
  print()
    
for i in range(5):
  print( blob.noun_phrases[random.randint(0,1000)])
  print( blob.words[random.randint(0,12787)])
    
  print()
    
for i in range(5):
  print( blob.noun_phrases[random.randint(0,1000)])
  print( blob.words[random.randint(0,12787)])
    
  print()
    
for i in range(5):
  print( blob.noun_phrases[random.randint(0,1000)])
  print( blob.words[random.randint(0,12787)])

  # def rhyme(eye):
  #    entries = nltk.corpus.cmudict.entries()
  #    syllables = [(word, syl) for word, syl in entries if word == eye]

  line1 = "There is no doubt that Marley was dead"
  line2 = "It was with great astonishment, and with a strange, inexplicable dread"

  end1 = line1.split(" ")[-1]
  end2 = line2.split(" ")[-1]

  if (end1 in pronouncing.rhymes(end2)):
    print("God bless Us, Every One!")
  else:
    print("Bah! Humbug!")

word1 =random.choice(blob.words)

for w in blob.words:
  if (w in pronouncing.rhymes(word1)):
    print(word1, w)

with open('scrooge.txt',errors="surrogateescape") as f:
  text = f.read()

blob = TextBlob(text)
nouns = {}
for word,pos in blob.tags:
  if (pos == 'NN'):
    nouns[word] = 1

noun_rhymes = []

for n1 in nouns.keys():
  for n2 in nouns.keys():
    if n1 in pronouncing.rhymes(n2):
      n1_phone_list = pronouncing.phones_for_word(n1)
      n2_phone_list = pronouncing.phones_for_word(n2)
      if (pronouncing.stresses(n1_phone_list[0]) == pronouncing.stresses(n2_phone_list[0])):
        noun_rhymes.append((n1,n2))